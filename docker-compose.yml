name: CloudChest

x-common-variables: &common-variables
  db_name: &db_name cloudchest
  db_pass: &db_pass password # change to a secure password
  minio_secret_key: &minio_secret_key password # change to a secure password

services:
  # MinIO service
  minio:
    image: quay.io/minio/minio:latest
    container_name: minio1
    # TODO: Check if the blocked ports still allow download that uses presigned URL of MinIO
    # ports:
    #   - "9000:9000"
      # Uncomment below to expose the MinIO web console
      # - "9001:9001"
    volumes:
      - minio_data:/data
      - ./minio-setup.sh:/minio-setup.sh  # Add setup script
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: *minio_secret_key
    command: ["server", "/data", "--console-address", ":9001"]
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MariaDB service
  db:
    image: mariadb
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      MARIADB_ROOT_PASSWORD: *db_pass
      MARIADB_DATABASE: *db_name
    volumes:
      - mariadb_data:/var/lib/mysql:Z
    networks:
      - app-network

  # Backend service (Golang)
  backend:
    build:
      context: ./backend
      network: host
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      DB_NAME: *db_name
      DB_HOST: db # Use the Docker service name for MariaDB
      DB_USER: root 
      DB_PASS: *db_pass
      MINIO_ENDPOINT: minio:9000  # Use the MinIO service name within Docker network
      MINIO_ACCESS_KEY: root
      MINIO_SECRET_KEY: *minio_secret_key
      GO_ENV: production
    healthcheck:
      test: ["CMD", "./health_check"]
      interval: 3s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Frontend service (Vue.js)
  frontend:
    build:
      context: ./frontend
      network: host
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "8080:80"
    networks:
      - app-network

volumes:
  minio_data:
    driver: local
  mariadb_data:
    driver: local

networks:
  app-network:
